"StaticJavaLib.assertTrue(-2 % -3 == -2)" in "StaticJavaLib.assertTrue(-2 % -3 == -2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(-2 % 3 == -2)" in "StaticJavaLib.assertTrue(-2 % 3 == -2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(-3 % -2 == -1)" in "StaticJavaLib.assertTrue(-3 % -2 == -1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(-3 % 2 == -1)" in "StaticJavaLib.assertTrue(-3 % 2 == -1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(2 % -3 == 2)" in "StaticJavaLib.assertTrue(2 % -3 == 2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(2 % 3 == 2)" in "StaticJavaLib.assertTrue(2 % 3 == 2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(3 % -2 == 1)" in "StaticJavaLib.assertTrue(3 % -2 == 1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(3 % 2 == 1)" in "StaticJavaLib.assertTrue(3 % 2 == 1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(-2,-3) == -2)" in "StaticJavaLib.assertTrue(remainder(-2,-3) == -2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(-2,3) == -2)" in "StaticJavaLib.assertTrue(remainder(-2,3) == -2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(-3,-2) == -1)" in "StaticJavaLib.assertTrue(remainder(-3,-2) == -1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(-3,2) == -1)" in "StaticJavaLib.assertTrue(remainder(-3,2) == -1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(2,-3) == 2)" in "StaticJavaLib.assertTrue(remainder(2,-3) == 2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(2,3) == 2)" in "StaticJavaLib.assertTrue(remainder(2,3) == 2);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(3,-2) == 1)" in "StaticJavaLib.assertTrue(remainder(3,-2) == 1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"StaticJavaLib.assertTrue(remainder(3,2) == 1)" in "StaticJavaLib.assertTrue(remainder(3,2) == 1);" ==> public static void StaticJavaLib.assertTrue(boolean)
"i" in "i % j" ==> int i
"j" in "i % j" ==> int j
"remainder(-2,-3)" in "remainder(-2,-3) == -2" ==> static int remainder(int i,int j){
"remainder(-2,3)" in "remainder(-2,3) == -2" ==> static int remainder(int i,int j){
"remainder(-3,-2)" in "remainder(-3,-2) == -1" ==> static int remainder(int i,int j){
"remainder(-3,2)" in "remainder(-3,2) == -1" ==> static int remainder(int i,int j){
"remainder(2,-3)" in "remainder(2,-3) == 2" ==> static int remainder(int i,int j){
"remainder(2,3)" in "remainder(2,3) == 2" ==> static int remainder(int i,int j){
"remainder(3,-2)" in "remainder(3,-2) == 1" ==> static int remainder(int i,int j){
"remainder(3,2)" in "remainder(3,2) == 1" ==> static int remainder(int i,int j){

"-1" in "-3 % -2 == -1": int
"-1" in "-3 % 2 == -1": int
"-1" in "remainder(-3,-2) == -1": int
"-1" in "remainder(-3,2) == -1": int
"-2 % -3 == -2" in "StaticJavaLib.assertTrue(-2 % -3 == -2)": boolean
"-2 % -3" in "-2 % -3 == -2": int
"-2 % 3 == -2" in "StaticJavaLib.assertTrue(-2 % 3 == -2)": boolean
"-2 % 3" in "-2 % 3 == -2": int
"-2" in "-2 % -3 == -2": int
"-2" in "-2 % -3": int
"-2" in "-2 % 3 == -2": int
"-2" in "-2 % 3": int
"-2" in "-3 % -2": int
"-2" in "3 % -2": int
"-2" in "remainder(-2,-3) == -2": int
"-2" in "remainder(-2,-3)": int
"-2" in "remainder(-2,3) == -2": int
"-2" in "remainder(-2,3)": int
"-2" in "remainder(-3,-2)": int
"-2" in "remainder(3,-2)": int
"-3 % -2 == -1" in "StaticJavaLib.assertTrue(-3 % -2 == -1)": boolean
"-3 % -2" in "-3 % -2 == -1": int
"-3 % 2 == -1" in "StaticJavaLib.assertTrue(-3 % 2 == -1)": boolean
"-3 % 2" in "-3 % 2 == -1": int
"-3" in "-2 % -3": int
"-3" in "-3 % -2": int
"-3" in "-3 % 2": int
"-3" in "2 % -3": int
"-3" in "remainder(-2,-3)": int
"-3" in "remainder(-3,-2)": int
"-3" in "remainder(-3,2)": int
"-3" in "remainder(2,-3)": int
"1" in "-1": int
"1" in "3 % -2 == 1": int
"1" in "3 % 2 == 1": int
"1" in "remainder(3,-2) == 1": int
"1" in "remainder(3,2) == 1": int
"2 % -3 == 2" in "StaticJavaLib.assertTrue(2 % -3 == 2)": boolean
"2 % -3" in "2 % -3 == 2": int
"2 % 3 == 2" in "StaticJavaLib.assertTrue(2 % 3 == 2)": boolean
"2 % 3" in "2 % 3 == 2": int
"2" in "-2": int
"2" in "-3 % 2": int
"2" in "2 % -3 == 2": int
"2" in "2 % -3": int
"2" in "2 % 3 == 2": int
"2" in "2 % 3": int
"2" in "3 % 2": int
"2" in "remainder(-3,2)": int
"2" in "remainder(2,-3) == 2": int
"2" in "remainder(2,-3)": int
"2" in "remainder(2,3) == 2": int
"2" in "remainder(2,3)": int
"2" in "remainder(3,2)": int
"3 % -2 == 1" in "StaticJavaLib.assertTrue(3 % -2 == 1)": boolean
"3 % -2" in "3 % -2 == 1": int
"3 % 2 == 1" in "StaticJavaLib.assertTrue(3 % 2 == 1)": boolean
"3 % 2" in "3 % 2 == 1": int
"3" in "-2 % 3": int
"3" in "-3": int
"3" in "2 % 3": int
"3" in "3 % -2": int
"3" in "3 % 2": int
"3" in "remainder(-2,3)": int
"3" in "remainder(2,3)": int
"3" in "remainder(3,-2)": int
"3" in "remainder(3,2)": int
"StaticJavaLib.assertTrue(-2 % -3 == -2)" in "StaticJavaLib.assertTrue(-2 % -3 == -2);": void
"StaticJavaLib.assertTrue(-2 % 3 == -2)" in "StaticJavaLib.assertTrue(-2 % 3 == -2);": void
"StaticJavaLib.assertTrue(-3 % -2 == -1)" in "StaticJavaLib.assertTrue(-3 % -2 == -1);": void
"StaticJavaLib.assertTrue(-3 % 2 == -1)" in "StaticJavaLib.assertTrue(-3 % 2 == -1);": void
"StaticJavaLib.assertTrue(2 % -3 == 2)" in "StaticJavaLib.assertTrue(2 % -3 == 2);": void
"StaticJavaLib.assertTrue(2 % 3 == 2)" in "StaticJavaLib.assertTrue(2 % 3 == 2);": void
"StaticJavaLib.assertTrue(3 % -2 == 1)" in "StaticJavaLib.assertTrue(3 % -2 == 1);": void
"StaticJavaLib.assertTrue(3 % 2 == 1)" in "StaticJavaLib.assertTrue(3 % 2 == 1);": void
"StaticJavaLib.assertTrue(remainder(-2,-3) == -2)" in "StaticJavaLib.assertTrue(remainder(-2,-3) == -2);": void
"StaticJavaLib.assertTrue(remainder(-2,3) == -2)" in "StaticJavaLib.assertTrue(remainder(-2,3) == -2);": void
"StaticJavaLib.assertTrue(remainder(-3,-2) == -1)" in "StaticJavaLib.assertTrue(remainder(-3,-2) == -1);": void
"StaticJavaLib.assertTrue(remainder(-3,2) == -1)" in "StaticJavaLib.assertTrue(remainder(-3,2) == -1);": void
"StaticJavaLib.assertTrue(remainder(2,-3) == 2)" in "StaticJavaLib.assertTrue(remainder(2,-3) == 2);": void
"StaticJavaLib.assertTrue(remainder(2,3) == 2)" in "StaticJavaLib.assertTrue(remainder(2,3) == 2);": void
"StaticJavaLib.assertTrue(remainder(3,-2) == 1)" in "StaticJavaLib.assertTrue(remainder(3,-2) == 1);": void
"StaticJavaLib.assertTrue(remainder(3,2) == 1)" in "StaticJavaLib.assertTrue(remainder(3,2) == 1);": void
"String[] args" in "public static void main(String[] args){": java.lang.String[]
"i % j" in "return i % j;": int
"i" in "i % j": int
"int i" in "static int remainder(int i,int j){": int
"int j" in "static int remainder(int i,int j){": int
"j" in "i % j": int
"public class IntRemainder {" in "public class IntRemainder {": IntRemainder
"remainder(-2,-3) == -2" in "StaticJavaLib.assertTrue(remainder(-2,-3) == -2)": boolean
"remainder(-2,-3)" in "remainder(-2,-3) == -2": int
"remainder(-2,3) == -2" in "StaticJavaLib.assertTrue(remainder(-2,3) == -2)": boolean
"remainder(-2,3)" in "remainder(-2,3) == -2": int
"remainder(-3,-2) == -1" in "StaticJavaLib.assertTrue(remainder(-3,-2) == -1)": boolean
"remainder(-3,-2)" in "remainder(-3,-2) == -1": int
"remainder(-3,2) == -1" in "StaticJavaLib.assertTrue(remainder(-3,2) == -1)": boolean
"remainder(-3,2)" in "remainder(-3,2) == -1": int
"remainder(2,-3) == 2" in "StaticJavaLib.assertTrue(remainder(2,-3) == 2)": boolean
"remainder(2,-3)" in "remainder(2,-3) == 2": int
"remainder(2,3) == 2" in "StaticJavaLib.assertTrue(remainder(2,3) == 2)": boolean
"remainder(2,3)" in "remainder(2,3) == 2": int
"remainder(3,-2) == 1" in "StaticJavaLib.assertTrue(remainder(3,-2) == 1)": boolean
"remainder(3,-2)" in "remainder(3,-2) == 1": int
"remainder(3,2) == 1" in "StaticJavaLib.assertTrue(remainder(3,2) == 1)": boolean
"remainder(3,2)" in "remainder(3,2) == 1": int
